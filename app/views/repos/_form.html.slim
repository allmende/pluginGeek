/ repos/_form
ruby:
  category_picker_options =
    options_for_select(Category.for_picker.decorate.map do |category|
      [ category.name, category.id, { data: { data: category.to_selectize_option } } ]
    end, @repo.category_ids)

= form_for @repo do |f|
  = render 'shared/error_messages', target: @repo

  - if moderator?
    .field
      = f.label :owner_and_name, 'Owner/Name'
      = f.text_field :owner_and_name, autocomplete: 'off'

  .field
    = f.label :category_ids, 'Categories'
    = f.select :category_ids, category_picker_options, {}, { multiple: true, class: 'category_picker' }

  - if moderator?
    .checkbox
      = f.check_box :staff_pick
      = f.label :staff_pick, 'Staff pick'

  .field
    = f.label :parent_ids, 'Parents'
    .help-block Is "#{ @repo.owner_and_name }" based further open-source projects?

    = f.collection_select :parent_ids, Repo.for_picker.without(@repo), :id, :owner_and_name, {},
      { multiple: true, class: 'repo_picker' }

  .actions
    = f.submit class: 'button is_primary'

coffee:
  $ ->
    RepoForm.init();
